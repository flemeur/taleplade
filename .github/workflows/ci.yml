name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

  # Allow manual dispatch of workflow
  workflow_dispatch:

jobs:
  build:
    name: 'Build'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: Run linters
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          skip-pkg-cache: true
          skip-build-cache: true
          install-mode: binary
          args: --timeout 5m # --verbose

      - name: Build
        run: make

  push:
    name: 'Docker Push'

    needs: build

    runs-on: ubuntu-latest

    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/taleplade
          flavor: |
            latest=auto
          tags: |
            # full version tag
            type=semver,pattern={{version}}
            # major.minor version tag
            type=semver,pattern={{major.minor}}
            # major version tag
            type=semver,pattern={{major}}

      - name: Strip away version prefix
        id: version
        run: |
          VERSION='${{ github.ref_name }}'
          echo "version=${VERSION#v}" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          pull: true
          push: true
          provenance: false
          sbom: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ steps.version.outputs.version }}

  deploy:
    name: 'Deploy'

    needs: [build, push]

    if: github.event_name == 'push'

    strategy:
      matrix:
        environment: [prod]

    uses: ./.github/workflows/cd.yml
    with:
      environment: ${{ matrix.environment }}
      version: ${{ needs.push.outputs.version }}
    secrets: inherit
