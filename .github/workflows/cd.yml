name: CD

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to'
        type: string
        required: true
      version:
        description: 'Version to deploy'
        type: string
        required: true

concurrency:
  group: ${{ github.workflow }}-deploy-${{ inputs.environment }}-${{ github.ref }}
  cancel-in-progress: true

env:
  APP_NAME: taleplade

jobs:
  # The following is a workaround for this issue: https://github.com/actions/runner/issues/2120
  approval:
    name: 'Approve deployment'

    runs-on: ubuntu-latest

    environment: 'approval-${{ inputs.environment }}'

    steps:
      - name: Print
        run: |
          echo "Will deploy ${{ inputs.version }} to environment ${{ inputs.environment }}"

  setup:
    name: 'Setup'

    runs-on: ubuntu-latest

    needs: approval

    environment: ${{ inputs.environment }}

    outputs:
      hostnames: ${{ steps.matrix.outputs.hostnames }}

    steps:
      - id: matrix
        run: |
          HOSTNAMES='${{ vars.DEPLOY_HOSTNAMES }}'
          echo "hostnames=${HOSTNAMES}" >> $GITHUB_OUTPUT

  deploy:
    name: 'Deploy'

    runs-on: ubuntu-latest

    needs: setup

    environment: ${{ inputs.environment }}

    strategy:
      matrix:
        hostname: ${{ fromJSON(needs.setup.outputs.hostnames) }}

    steps:
      - name: Print
        run: |
          echo "Deploying ${{ inputs.version }} to environment ${{ inputs.environment }} on host ${{ matrix.hostname }}"

      - name: Add SSH keys
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan "${{ matrix.hostname }}" >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${{ secrets.DEPLOY_SSH_KEY }}"
          echo "SSH_AUTH_SOCK=${SSH_AUTH_SOCK}" >> $GITHUB_ENV

      - name: Deploy
        run: |
          # NOTE: The folling is untested and needs a little more work
          ssh flemming@${{ matrix.hostname }} 'cd taleplade && docker compose pull web && docker compose up -d'
